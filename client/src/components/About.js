// ===== React Component ุงููุญุฏุซ =====
import React, { useEffect, useRef, useState } from "react";
import { Container, Form } from "react-bootstrap";
import { useNavigate, Link } from "react-router-dom";
import "./About.css";

function About() {
  const navigate = useNavigate();
  const sectionRef = useRef(null);

  // ===== Scroll reveal =====
  useEffect(() => {
    const root = sectionRef.current;
    if (!root) return;
    const items = root.querySelectorAll(".reveal");
    const io = new IntersectionObserver(
      (entries) => {
        entries.forEach((e) => {
          if (e.isIntersecting) {
            e.target.classList.add("in-view");
            io.unobserve(e.target);
          }
        });
      },
      { threshold: 0.15, rootMargin: "0px 0px -50px 0px" }
    );
    items.forEach((el) => io.observe(el));
    return () => io.disconnect();
  }, []);

  // ===== Stats numbers =====
  useEffect(() => {
    const prefersReduced = window.matchMedia("(prefers-reduced-motion: reduce)").matches;
    const els = document.querySelectorAll(".stat-value");

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry, index) => {
          if (entry.isIntersecting) {
            const el = entry.target;
            const target = parseInt(el.getAttribute("data-target") || "0", 10);

            if (prefersReduced) {
              el.textContent = target.toLocaleString("ar");
              return;
            }

            let current = 0;
            const increment = target / 50;
            const duration = 1500;

            const timer = setInterval(() => {
              current += increment;
              if (current >= target) {
                current = target;
                clearInterval(timer);
              }
              el.textContent = Math.floor(current).toLocaleString("ar");
            }, duration / 50);

            observer.unobserve(el);
          }
        });
      },
      { threshold: 0.3 }
    );

    els.forEach((el) => observer.observe(el));
    return () => observer.disconnect();
  }, []);

  // ===== Form state & validation =====
  const [form, setForm] = useState({ name: "", email: "", message: "", agree: false });
  const [touched, setTouched] = useState({});
  const [sent, setSent] = useState(false);

  const rules = {
    name: (v) => v.trim().length >= 3,
    email: (v) => /^\S+@\S+\.\S+$/.test(v),
    message: (v) => v.trim().length >= 20,
    agree: (v) => v === true,
  };

  const errors = {
    name: !rules.name(form.name) ? "ุงูุงุณู ูุฌุจ ุฃู ูุง ููู ุนู 3 ุฃุญุฑู." : "",
    email: !rules.email(form.email) ? "ุฑุฌุงุกู ุฃุฏุฎู ุจุฑูุฏูุง ุฅููุชุฑููููุง ุตุงูุญูุง." : "",
    message: !rules.message(form.message) ? "ุงูุฑุณุงูุฉ ูุฌุจ ุฃู ูุง ุชูู ุนู 20 ุญุฑููุง." : "",
    agree: !rules.agree(form.agree) ? "ูุฌุจ ุงูููุงููุฉ ุนูู ุงูุดุฑูุท ูุจู ุงูุฅุฑุณุงู." : "",
  };

  const isValid = Object.values(errors).every((e) => e === "");

  const handleChange = (e) => {
    const { name, type, value, checked } = e.target;
    setForm((f) => ({ ...f, [name]: type === "checkbox" ? checked : value }));
  };

  const handleBlur = (e) => setTouched((t) => ({ ...t, [e.target.name]: true }));

  const handleSubmit = (e) => {
    e.preventDefault();
    setTouched({ name: true, email: true, message: true, agree: true });
    if (!isValid) return;
    // TODO: ุฅุฑุณุงู ุฅูู API
    setSent(true);
  };

  const serviceCards = [
    {
      icon: "๐ฉธ",
      title: "ุชุจุฑุน ุจุงูุฏู",
      description: "ุณุงูู ูู ุฅููุงุฐ ุงูุฃุฑูุงุญ ุนุจุฑ ุชุจุฑุน ุขูู ูุณุฑูุน",
      path: "/donations",
      state: { type: "blood" }
    },
    {
      icon: "๐ณ",
      title: "ุชุจุฑุน ูุงูู",
      description: "ุงุฏุนู ุญุงูุงุช ุนุงุฌูุฉ ุจูุณุงููุฉ ุขููุฉ ูุดูุงูุฉ",
      path: "/donations",
      state: { type: "financial" }
    },
    {
      icon: "๐",
      title: "ุชุจุฑุน ุนููู",
      description: "ูุฏูู ููุงุจุณุ ุทุนุงููุง ุฃู ุฃุฏูุงุช ูุชูุจูุฉ ุงุญุชูุงุฌุงุช ุนุงุฌูุฉ",
      path: "/donations",
      state: { type: "in-kind" }
    },
    {
      icon: "๐โโ๏ธ",
      title: "ุชุทููุน",
      description: "ุงูุถู ููุฑู ูุณุงุนุฏุฉ ููุฏุงููุฉ ุฃู ุฑูููุฉ ุญุณุจ ููุชู",
      path: "/announcements",
      state: { type: "volunteer" }
    },
    {
      icon: "๐ก",
      title: "ุฃููุงุฑ ููุจุงุฏุฑุงุช",
      description: "ุดุงุฑู ูุจุงุฏุฑุชู ูุงุฌูุน ูุชุทูุนูู ูุชูููุฐูุง",
      path: "/announcements",
      state: { type: "ideas" }
    },
    {
      icon: "๐",
      title: "ููููุฏุงุช",
      description: "ุงูุดุฑ/ุงุจุญุซ ุนู ููููุฏุงุช ูุณุงุนุฏ ุฃุตุญุงุจูุง ูู ุงุณุชุฑุฌุงุนูุง",
      path: "/announcements",
      state: { type: "lost" }
    }
  ];

  const stats = [
    {
      icon: "โค๏ธ",
      value: "1240",
      label: "ุชุจุฑุน ูุงุฌุญ",
      description: "ุณุงูููุง ูู ุฅููุงุฐ ุงูุฃุฑูุงุญ"
    },
    {
      icon: "๐",
      value: "85",
      label: "ุญููุฉ ูุนุงูุฉ",
      description: "ูุฌูุน ุงูุชุจุฑุนุงุช ูุงููุจุงุฏุฑุงุช"
    },
    {
      icon: "โ",
      value: "530",
      label: "ูุชุจุฑุน ููุซูู",
      description: "ูู ูุฌุชูุนูุง ุงููุชูุงูู"
    }
  ];

  const faqs = [
    {
      question: "ููู ุฃุถูู ููุซูููุฉ ุงูุทูุจุงุชุ",
      answer: "ูุทุจูู ุชูุซูู ุงููููุฉ ููุฑุงุฌุนุฉ ุงููุซุงุฆูุ ูุน ุดุงุฑุงุช ุซูุฉ ูุชุงุฑูุฎ ุขุฎุฑ ุชุญุฏูุซ ููู ุทูุจ."
    },
    {
      question: "ูู ุงูุชุจุฑุน ุงููุงูู ุขููุ",
      answer: "ูุชู ุนุจุฑ ูููุงุช ุขููุฉ ููุดููุฑุฉุ ูุน ุชุชุจุน ููุฏูุนุงุช ูุนุฑุถ ููุฎุต ุงูุงุณุชุฎุฏุงู."
    },
    {
      question: "ููู ุฃุชูุงุตู ูุน ุตุงุญุจ ุงูุทูุจุ",
      answer: "ูู ุตูุญุฉ ุงูุทูุจุ ุงุณุชุฎุฏู ุฒุฑ \"ุชูุงุตู\"โุณุชุฌุฏ ุงููุงุชู/ุงููุงุชุณุงุจ ุจุนุฏ ุชุญูู ุงูุตูุงุญูุงุช."
    },
    {
      question: "ูู ูููููู ุงูุชุทูุน ุจุฏูู ุฎุจุฑุฉ ุณุงุจูุฉุ",
      answer: "ูุนูุ ูููุฑ ูุฑุต ุชุทูุน ุชูุงุณุจ ุฌููุน ุงููุณุชููุงุช ูููุฏู ุงูุชูุฌูู ูุงูุฏุนู ุงููุงุฒู."
    },
    {
      question: "ููู ุฃุชุงุจุน ุญุงูุฉ ุทูุจู ุฃู ุชุจุฑุนูุ",
      answer: "ููููู ูุชุงุจุนุฉ ุญุงูุฉ ุงูุทูุจ ุฃู ุงูุชุจุฑุน ูู ุฎูุงู ุญุณุงุจู ุงูุดุฎุตู ูู ุงูููุตุฉ ูุณุชุตูู ุฅุดุนุงุฑุงุช ุจุงูุชุญุฏูุซุงุช."
    },
    {
      question: "ูู ูููููู ุงูุชุฑุงุญ ุฎุฏูุฉ ุฃู ูุจุงุฏุฑุฉ ุฌุฏูุฏุฉุ",
      answer: "ุจูู ุณุฑูุฑ! ููููู ุฅุฑุณุงู ุงูุชุฑุงุญู ุนุจุฑ ูููุฐุฌ ุงูุชูุงุตู ูุณูููู ุจุฏุฑุงุณุชู ูุงูุฑุฏ ุนููู."  
    }
  ];

  return (
    <section className="about-container" aria-labelledby="about-title" ref={sectionRef}>
      <section>
        {/* ุชุนุฑูู ุงูููุตุฉ ูุน ุงูุชุตููู ุงููุจุณุท */}
        <header className="about-hero reveal" data-animate="up">
          <div className="hero-content">
            {<div className="hero-badge">
              <span className="badge-icon">๐</span>
              <span className="badge-text">ููุตุฉ ุชุจุฑุน ุงูุฑุณููุฉ</span>
            </div>}

            <h1 id="about-title" className="hero-title">
              ุนู ููุตุฉ ุชุจุฑุน
            </h1>

            <div className="hero-description">
              <p className="hero-text">
                ููุตุฉ ุชุจุฑุน ุชุฌูุน ุจูู ูู ูุฑุบุจ ูู ุงูุนุทุงุก ููู ูุณุนู ููุฏุนูุ ุนุจุฑ ุชูุงุตู ูุจุงุดุฑ ูุขูู.
                <span className="highlight"> ูุณูู ุฎุทูุงุช ุงูุชุจุฑุน ููุถุงุนู ุฃุซุฑู ูู ุงููุฌุชูุน.</span>
              </p>

              <div className="features-grid">
                <div className="feature">
                  <span className="feature-icon">๐ฉธ</span>
                  <span className="feature-text">ุงูุชุจุฑุน ุจุงูุฏู</span>
                </div>
                <div className="feature">
                  <span className="feature-icon">๐ณ</span>
                  <span className="feature-text">ุงูุชุจุฑุน ุงููุงูู</span>
                </div>
                <div className="feature">
                  <span className="feature-icon">๐</span>
                  <span className="feature-text">ุงูุชุจุฑุน ุงูุนููู</span>
                </div>
                <div className="feature">
                  <span className="feature-icon">๐ข</span>
                  <span className="feature-text">ุงูุฅุนูุงูุงุช ุงูุงุฌุชูุงุนูุฉ</span>
                </div>
              </div>
            </div>
          </div>

          <div className="hero-image">
            <div className="image-wrapper">
              <img
                src="/images/tabar7.jpg"
                alt="ููุตุฉ ุชุจุฑุน - ุชูุงุตู ูุจุงุดุฑ ุจูู ุงููุชุจุฑุน ูุงููุญุชุงุฌ"
                className="hero-img"
              />
              <div className="image-overlay">
                <div className="stats-overlay">
                  <div className="stat">
                    <span className="stat-number">1000+</span>
                    <span className="stat-label">ูุชุจุฑุน</span>
                  </div>
                  <div className="stat">
                    <span className="stat-number">500+</span>
                    <span className="stat-label">ุญุงูุฉ</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </header>

        {/* ุงูุฎุฏูุงุช */}
        <section className="separador">
          <div className="separador-content">
             <h2 className="section-title">ุฎุฏูุงุชูุง</h2>
          </div>
        </section>
        <section aria-label="ุงูุฎุฏูุงุช ุงููุชุงุญุฉ" className="services-section">
        
          <div className="services-grid">
            {serviceCards.map((service, index) => (
              <div key={index} className="service-card reveal" data-animate="up">
                <div className="service-content">
                  <div className="service-icon">{service.icon}</div>
                  <h3 className="service-title">{service.title}</h3>
                  <p className="service-description">{service.description}</p>
                </div>
                <button
                  className="service-btn"
                  onClick={() => navigate(service.path, { state: service.state })}
                >
                  ุงุจุฏุฃ ุงูุขู
                </button>
              </div>
            ))}
          </div>
        </section>

        {/* ุงูุฅุญุตุงุฆูุงุช */}
        <section className="stats-section" aria-label="ุฅุญุตุงุฆูุงุช ุงูููุตุฉ">
          <h2 className="section-title">ุฃุซุฑูุง ูู ุงููุฌุชูุน</h2>
          <div className="stats-grid">
            {stats.map((stat, index) => (
              <div key={index} className="stat-card reveal" data-animate="up">
                <div className="stat-icon">{stat.icon}</div>
                <div className="stat-value" data-target={stat.value}>0</div>
                <div className="stat-label">{stat.label}</div>
                <div className="stat-description">{stat.description}</div>
              </div>
            ))}
          </div>
        </section>
        <section className="separador">
          <div className="separador-content">
            <h3 id="form-title" className="form-title">ุชูุงุตู ูุนูุง</h3>
            <p className="form-description">
              ูุญู ููุง ููุฅุฌุงุจุฉ ุนูู ุฌููุน ุงุณุชูุณุงุฑุงุชู ุฃู ููุงุญุธุงุชู. ููููู ุงูุชูุงุตู ูุนูุง ุนุจุฑ ุงููููุฐุฌ ุฃู ูู ุฎูุงู ูุณุงุฆู ุงูุชูุงุตู ุงูุชุงููุฉ:
            </p>
          </div>
        </section>
        {/* ูููุฐุฌ ุงูุงุชุตุงู ุงููุญุณู */}

        <section className="contact-form-section" aria-labelledby="form-title">
          <div className="form-header">

            <div className="divider" aria-hidden="true">
              <img
                src={require("../images/contactanos.png")}
                alt="ุชูุงุตู ูุนูุง"
                className="divider-img"
              />
            </div>

          </div>
          <div className="form-container">
            {!sent ? (
              <Form noValidate onSubmit={handleSubmit} className="simple-form">
                <div className="form-grid">
                  <div className="form-field">
                    <Form.Label htmlFor="name">ุงูุงุณู ุงููุงูู</Form.Label>
                    <Form.Control
                      id="name"
                      name="name"
                      type="text"
                      placeholder="ุฃุฏุฎู ุงุณูู ุงููุงูู"
                      value={form.name}
                      onChange={handleChange}
                      onBlur={handleBlur}
                      isInvalid={touched.name && !!errors.name}
                      required
                      minLength={3}
                      className="form-input"
                    />
                    <Form.Control.Feedback type="invalid" className="error-message">
                      {errors.name}
                    </Form.Control.Feedback>
                  </div>

                  <div className="form-field">
                    <Form.Label htmlFor="email">ุงูุจุฑูุฏ ุงูุฅููุชุฑููู</Form.Label>
                    <Form.Control
                      id="email"
                      name="email"
                      type="email"
                      placeholder="example@mail.com"
                      value={form.email}
                      onChange={handleChange}
                      onBlur={handleBlur}
                      isInvalid={touched.email && !!errors.email}
                      required
                      className="form-input"
                    />
                    <Form.Control.Feedback type="invalid" className="error-message">
                      {errors.email}
                    </Form.Control.Feedback>
                  </div>

                  <div className="form-field full-width">
                    <Form.Label htmlFor="message">ุฑุณุงูุชู</Form.Label>
                    <Form.Control
                      as="textarea"
                      id="message"
                      name="message"
                      rows={4}
                      placeholder="ุงูุชุจ ุฑุณุงูุชู ููุง..."
                      value={form.message}
                      onChange={handleChange}
                      onBlur={handleBlur}
                      isInvalid={touched.message && !!errors.message}
                      required
                      minLength={20}
                      className="form-textarea"
                    />
                    <Form.Control.Feedback type="invalid" className="error-message">
                      {errors.message}
                    </Form.Control.Feedback>
                  </div>
                </div>

                <div className="agreement-section">
                  <Form.Check
                    id="agree"
                    name="agree"
                    checked={form.agree}
                    onChange={handleChange}
                    onBlur={handleBlur}
                    isInvalid={touched.agree && !!errors.agree}
                    required
                    className="agreement-checkbox"
                  />
                  <Form.Label htmlFor="agree" className="agreement-label">
                    ุฃูุงูู ุนูู <Link to="/terms" className="terms-link">ุงูุดุฑูุท ูุงูุฃุญูุงู</Link> ูุณูุงุณุฉ ุงูุฎุตูุตูุฉ
                  </Form.Label>
                  <Form.Control.Feedback type="invalid" className="error-message">
                    {errors.agree}
                  </Form.Control.Feedback>
                </div>

                <div className="form-buttons">
                  <button type="submit" className="submit-btn" disabled={!isValid}>
                    ุฅุฑุณุงู ุงูุฑุณุงูุฉ
                  </button>
                  <Link to="/add-user" className="secondary-btn">
                    ุฅูุดุงุก ุญุณุงุจ ุฌุฏูุฏ
                  </Link>
                </div>
              </Form>
            ) : (
              <div className="success-state">
                <div className="success-message">
                  <div className="success-icon">โ</div>
                  <h4>ุชู ุงุณุชูุงู ุฑุณุงูุชู ุจูุฌุงุญ</h4>
                  <p>ุณูููู ุจุงูุฑุฏ ุนููู ูู ุฃูุฑุจ ููุช ูููู</p>
                </div>
                <div className="success-buttons">
                  <Link to="/add-user" className="submit-btn">
                    ุฅูุดุงุก ุญุณุงุจ ุฌุฏูุฏ
                  </Link>
                  <Link to="/donations" className="secondary-btn">
                    ุชุตูุญ ุงูุชุจุฑุนุงุช
                  </Link>
                </div>
              </div>
            )}
          </div>
        </section>



        {/* ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ */}
  <section className="separador">
          <div className="separador-content">
          <h2 id="faq-title" className="section-title">ุฃุณุฆูุฉ ุดุงุฆุนุฉ</h2>
            <p className="form-description">
              ุชุฌุฏ ููุง ุฅุฌุงุจุงุช ูุฃูุซุฑ ุงูุฃุณุฆูุฉ ุดููุนูุง ุญูู ููุตุชูุง ูุฎุฏูุงุชูุง
            </p>
          </div>
        </section>
        <section className="faq-section" aria-labelledby="faq-title">
          <div className="faq-grid">
            {faqs.map((faq, index) => (
              <details key={index} className="faq-item reveal" data-animate="up">
                <summary className="faq-question">{faq.question}</summary>
                <div className="faq-answer">
                  <p>{faq.answer}</p>
                </div>
              </details>
            ))}
          </div>
        </section>


        {/* ุงูุฏุนูุฉ ููุฅุฌุฑุงุก */}
        <section className="cta-section">
          <div className="cta-card">
            <h3 className="cta-title">ุงุจุฏุฃ ุฑุญูุชู ูู ุงูุนุทุงุก</h3>
            <p className="cta-text">

              ุงูุถู ุฅูู ุขูุงู ุงููุชุจุฑุนูู ูุงููุชุทูุนูู ุงูุฐูู ูุณุงูููู ูู ุตูุน ูุฑู ุญูููู ูู ุงููุฌุชูุน
            </p>

            <div className="cta-buttons">
              <Link to="/add-user" className="cta-btn primary">
                ุณุฌู ุงูุขู ูุฌุงูุงู
              </Link>
              <Link to="/donations" className="cta-btn secondary">
                ุชุตูุญ ุงูุชุจุฑุนุงุช
              </Link>
            </div>
          </div>
        </section>
      </section>
    </section >
  );
}

export default About;